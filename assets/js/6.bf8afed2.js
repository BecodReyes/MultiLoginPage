(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{843:function(t,e,a){"use strict";a.r(e);var n=a(77),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://bstats.org/signatures/bukkit/MultiLoginR.svg",alt:"MultiLoginR"}})]),t._v(" "),a("h2",{attrs:{id:"features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" Features")]),t._v(" "),a("ul",[a("li",[t._v("Multi Yggdrasil coexistence")]),t._v(" "),a("li",[t._v("It can control the UUID of the player in the game")]),t._v(" "),a("li",[t._v("White list system supporting Yggdrasil group management")]),t._v(" "),a("li",[t._v("Prevent an account with the same name from appearing on the server")]),t._v(" "),a("li",[t._v("Prevent preemptive registration of ID in the server")]),t._v(" "),a("li",[t._v("Account security protection mechanism")]),t._v(" "),a("li",[t._v("Support "),a("em",[t._v("Velocity")]),t._v(" "),a("em",[t._v("Bungee")]),t._v(" "),a("em",[t._v("Bukkit")]),t._v(" and "),a("em",[t._v("Fabric")])])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[t._v("#")]),t._v(" Start")]),t._v(" "),a("ol",[a("li",[t._v("Download the latest version in release and drop it into the plugins folder.")]),t._v(" "),a("li",[t._v("Configure.")]),t._v(" "),a("li",[t._v("Enjoy!")])]),t._v(" "),a("h2",{attrs:{id:"configuration-file-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-file-example"}},[t._v("#")]),t._v(" Configuration file example")]),t._v(" "),a("p",[a("em",[t._v("Do not copy and paste directly. Please configure your configuration file against this example")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Yggdrasil authentication server name. ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# One represents a Yggdrasil authentication server.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can copy it to create multiple Yggdrasil authentication servers")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enable the authentication server.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Closing it will deny all players who use the Yggdrasil account to verify their login to the game.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The nickname of the authentication server is used as the display of the Yggdrasil account authentication server")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'demo yggdrasil service'")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Yggdrasil validates the basic property settings of the server.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Yggdrasil authentication server server hasjoin part authentication request link settings.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The variable {0} represents username")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The variable {1} represents serverId")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The variable {2} represents the content set by the passIpContent node")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://example.com/yggdrasil/session/hasJoined?username={0}&serverId={1}{2}"')]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Verify account identity by post request")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In most cases, the Yggdrasil authentication server uses the get request method to verify the user data.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you do not understand the current Yggdrasil verification process, do not modify it.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This configuration node is valid only when the servertype node value is 'CUSTOM'.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether the user IP information is transferred in the hasjoin phase.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you do not understand the current Yggdrasil verification process, do not modify it.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("passIp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the URL node {2} variable content.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Where the variable {0} is the obtained IP information.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This node is valid only if the passip configuration node is true.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("passIpContent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ip={0}"')]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the request content of post.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This node is valid only if the value of the postmode configuration node is true.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The variable {0} in the get request represents username and the variable {1} represents serverid.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The content does not contain IP information, please do not add additional parameters.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postContent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"username":"{0}", "serverId":"{1}"}\'')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When a player passes the verification in the verification server set in this node for the first time, the UUID in the game will be generated according to the rules filled in this node.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Currently only the following values are supported:")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  DEFAULT - use Yggdrasil to verify the UUID provided by the server.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  OFFLINE - automatically generate offline UUIDs (offline UUID).")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  RANDOM - random UUID.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Please set and modify this node carefully.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# To avoid triggering some mechanisms on the paper, it is strongly recommended that this value be DEFAULT.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("convUuid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DEFAULT\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# When the player logs in successfully for the first time, if the UUID generated by the configuration node "convuuid" already exists, it will be automatically corrected to a random UUID to avoid data confusion.')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Try to keep this value true unless you know what the consequences are (although the probability is small).")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("convRepeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the user name does not match the regular expression, the login request will be rejected.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nameAllowedRegular")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^[0-9a-zA-Z_]{2,10}$'")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to set a separate whitelist for the current authentication server.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When the global whitelist configuration node is true, this configuration node is invalid.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("whitelist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether players with the same Redirect UUID in the server refuse to log in,")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If it is false, the player in the game will be kicked out and the player in verification will log in successfully (original mechanism),")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If true, the current login request will be rejected.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("refuseRepeatedLogin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Number of validation error retries")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("authRetry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("br"),t._v(" "),a("h2",{attrs:{id:"commands-and-permissions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commands-and-permissions"}},[t._v("#")]),t._v(" Commands and permissions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Commands")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Permissions")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Function")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/whitelist add <target>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("multilogin.whitelist")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Add <target> to whitelist")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/whitelist remove <target>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("multilogin.whitelist")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Remove the white list of <target>")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/multilogin reload")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("multilogin.multilogin.reload")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Reload configuration file")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/multilogin query name <target>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("multilogin.multilogin.query")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the data of player name")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/multilogin query redirectuuid <target>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("multilogin.multilogin.query")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the data of redirectuuid")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/multilogin query onlineuuid <target>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("multilogin.multilogin.query")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the data of onlineuuid")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("multilogin.update")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Receive new version notifications")])])])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"placeholderapi-variable-bukkit-only"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#placeholderapi-variable-bukkit-only"}},[t._v("#")]),t._v(" PlaceholderAPI variable (Bukkit Only)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("variable")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Function")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%multilogin_currentname%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Player's current game ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%multilogin_onlineuuid%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("UUID of player online")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%multilogin_redirecteduuid%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("UUID of the player in the game")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%multilogin_whitelist%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Does the player have a white list")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%multilogin_yggdrasilname%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("The name of the Yggdrasil account verification server where the player is located")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%multilogin_yggdrasilpath%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("The path of the Yggdrasil account verification server where the player is located")])])])]),t._v(" "),a("br"),t._v(" "),a("h1",{attrs:{id:"contributor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contributor"}},[t._v("#")]),t._v(" Contributor")]),t._v(" "),a("a-tooltip",{attrs:{placement:"bottom"}},[a("template",{slot:"title"},[t._v("\n\tCaaMoe\n  ")]),t._v(" "),a("a-avatar",{attrs:{src:"https://avatars.githubusercontent.com/u/70059785?v=4",size:54}})],2),t._v("\n \n"),a("a-tooltip",{attrs:{placement:"bottom"}},[a("template",{slot:"title"},[t._v("\n    ksqeib445\n  ")]),t._v(" "),a("a-avatar",{attrs:{src:"https://avatars.githubusercontent.com/u/28245341?v=4",size:54}})],2),t._v("\n \n"),a("a-tooltip",{attrs:{placement:"bottom"}},[a("template",{slot:"title"},[t._v("\n    BecodReyes\n  ")]),t._v(" "),a("a-avatar",{attrs:{src:"https://avatars.githubusercontent.com/u/35525491?v=4",size:54}})],2),t._v("\n \n"),a("a-tooltip",{attrs:{placement:"bottom"}},[a("template",{slot:"title"},[t._v("\n    SugiharaYoki\n  ")]),t._v(" "),a("a-avatar",{attrs:{src:"https://avatars.githubusercontent.com/u/80352861?v=4",size:54}})],2),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/CaaMoe/MultiLogin/pulls",target:"_blank",rel:"noopener noreferrer"}},[t._v("I also want to be one of the contributors？"),a("OutboundLink")],1)])],1)}),[],!1,null,null,null);e.default=s.exports}}]);